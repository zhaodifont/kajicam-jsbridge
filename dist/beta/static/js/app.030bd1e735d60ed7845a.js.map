{"version":3,"sources":["webpack:///./src/config/prod.js","webpack:///./src/config/index.js","webpack:///./src/config/beta.js","webpack:///./src/js/util/BrowserChecker.js","webpack:///./src/js/bridge/bridgeContext.js","webpack:///./src/js/bridge/AbstractBridge.js","webpack:///./src/js/bridge/NullBridge.js","webpack:///./src/js/bridge/model/AppInfo.js","webpack:///./src/js/bridge/model/AppCommonResult.js","webpack:///./src/js/bridge/model/EventCameraResult.js","webpack:///./src/js/bridge/model/GetCameraResult.js","webpack:///./src/js/bridge/model/CameraResult.js","webpack:///./src/js/bridge/AndroidBridge.js","webpack:///./src/js/bridge/IosBridge.js","webpack:///./src/js/bridge/BridgeFactory.js","webpack:///./src/js/bridge/param/EventCameraParam.js","webpack:///./src/js/bridge/param/BridgeParam.js","webpack:///./src/main.js","webpack:///./src/config/local.js"],"names":["module","exports","assetsPublicPath","assetsRoot","b612Scheme","sitePrefix","uploadUrl","imgProcess","imagePrefix","filterId","categoryId","stickerId","betaConfig","require","config","activityName","downLink","BrowserChecker","navigator","userAgent","match","console","log","isIos","isAndroid","result","appVersion","ua","indexOf","bridgeContext","bridgeNs1st","bridgeNs2nd","_initB612Context","window","this","getB612NativeContext","context","namespace","AbstractBridge","classCallCheck_default","className","constructor","name","fullName","callback","_registerGlobal","callbackName","userCallback","resultType","_len","arguments","length","additionalParams","Array","_key","_this","_logResult","resultParsed","from","apply","undefined","concat","_makeNativeCallbackName","methodName","_result","substring","instance","NullBridge","_ret","possibleConstructorReturn_default","__proto__","get_prototype_of_default","call","get_default","prototype","saveShareParam","toString","sharePoppedCallback","shareMediaClickedCallback","eventCameraParam","AppInfo","app","os","deviceModel","language","country","_JSON$parse","JSON","parse","AppCommonResult","success","EventCameraResult","base64Image","GetCameraResult","replace","CameraResult","_ref","url","landmarks","stringify_default","native","B612KajiBridgeInterface","AndroidBridge","callbackMethodFullName","_registerCallback","appInfo","save","sharePoppedCallbackName","shareMediaClickedCallbackName","shareWithCallback","type","cameraPosition","eventCamera","eventCameraWithLandmarks","getCameraImage","getCameraImageWithLandmarks","close","IosBridge","_calliOSFunction","options","clickShareButton","functionName","args","sCallback","ConfigFactory","callInfo","_openCustomURLinIFrame","src","rootElm","document","documentElement","newFrameElm","createElement","setAttribute","appendChild","parentNode","removeChild","BridgeFactory","types","imageCamera","imageAlbum","cameraPositions","front","back","EventCameraParam","collageId","autoDownload","clearEmpty","key","value","VConsole","appState","isAnd","isInApp","getParamsToObj","obj","location","search","split","forEach","item","index","ite","eventCameraCallback","$","text","attr","querySelector","innerText","getBridge","res","css","show","click","uuid","on","param","trigger","baseConfig","URL","createObjectURL","files"],"mappings":"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","file":"static/js/app.030bd1e735d60ed7845a.js","sourcesContent":["module.exports = {\n  // assetsPublicPath: '//h5.kajicam.com/events/sept/',// 拼接静态资源的前缀\n  assetsPublicPath: './',\n  assetsRoot: '../dist/release/',\n  b612Scheme: 'b612cn://',\n  sitePrefix: 'http://h5.kajicam.com/events/', // 拼接link的前缀 短点好 还是这个服务器 每次不用再改\n  uploadUrl: \"https://b612-fs.snowcam.cn/v1/event/vision/xiaofu/upload-only\",\n  imgProcess:'https://b612-fs.snowcam.cn/v1/event/vision/xiaofu',\n  imagePrefix: \"https://b612kaji-org.oss-cn-beijing.aliyuncs.com/\",\n  filterId: \"235\",\n  categoryId: \"20005\",\n  stickerId: \"301197\",\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/prod.js","const betaConfig = require('./beta.js')\nconst proConfig = require('./prod.js')\nconst localConfig = require('./local.js')\nlet env = process.env.NODE_ENV\nlet config = null\n\nif (env == 'local' || env == 'dev' || env == 'development') {\n  config = localConfig\n} else if (env == 'beta') {\n  config = betaConfig\n} else {\n  config = proConfig\n}\n\nmodule.exports = config\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/index.js","module.exports = {\n  assetsPublicPath: './',\n  assetsRoot: '../dist/beta/',\n  b612Scheme: 'b612cnb://',\n  sitePrefix: 'http://h5-beta.kajicam.com/events',// 拼接打开app并在其中启动link的前缀 短点好 服务器地址 每次不用再改\n  uploadUrl: \"http://qa-b612-fs.snowcam.cn/v1/event/vision/xiaofu/upload-only\",\n  imgProcess:'http://qa-b612-fs.snowcam.cn/v1/event/vision/xiaofu',\n  imagePrefix: \"https://qa-b612.snowcam.cn/owfs/\",\n  filterId: \"235\",\n  categoryId: \"20136\",\n  stickerId: \"301197\",\n  activityName: 'sept', //活动目录\n  downLink: 'https://lnk0.com/easylink/EL50AJ9g'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/beta.js","class BrowserChecker {\r\n    static isIos() {\r\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i) ? true : false;\r\n    }\r\n\r\n    static isAndroid() {\r\n        return navigator.userAgent.match(/Android/i) ? true : false;\r\n    }\r\n\r\n    static isIosOrAndroid() {\r\n        console.log(\"[navigation.userAgent] : \" + navigator.userAgent);\r\n        return BrowserChecker.isIos() || BrowserChecker.isAndroid();\r\n    }\r\n\r\n    static isIosLowerThan11() {\r\n        let result = false;\r\n        if (BrowserChecker.isIos()) {\r\n            const majorVersion = (navigator.appVersion).match(/OS (\\d+)_(\\d+)_?(\\d+)?/)[1];\r\n            result = majorVersion <= 10;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static isIos8or9() {\r\n        const ua = navigator.userAgent;\r\n        return (ua.indexOf(\"OS 8_\") >= 0 || ua.indexOf(\"OS 9_\") >= -1);\r\n    }\r\n}\r\n\r\nexport default BrowserChecker\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/util/BrowserChecker.js","const bridgeContext = {\r\n    bridgeNs1st: \"B612\",\r\n    bridgeNs2nd: \"Native\",\r\n\r\n    _initB612Context() {\r\n        window[this.bridgeNs1st] = window[this.bridgeNs1st] || {};\r\n        window[this.bridgeNs1st][this.bridgeNs2nd] = window[this.bridgeNs1st][this.bridgeNs2nd] || {};\r\n\r\n        return window[this.bridgeNs1st][this.bridgeNs2nd];\r\n    },\r\n\r\n    getB612NativeContext() {\r\n        const context = this._initB612Context();\r\n        context.namespace = this.bridgeNs1st + \".\" + this.bridgeNs2nd;\r\n        return context;\r\n    }\r\n};\r\n\r\nexport default bridgeContext\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/bridgeContext.js","import bridgeContext from \"./bridgeContext\";\r\n\r\nexport default class AbstractBridge {\r\n    constructor() {\r\n        return null;\r\n    }\r\n\r\n    static getInstance() {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Bridge 인스턴스 초기화\r\n     * @private\r\n     */\r\n    _initInstance() {\r\n        this.className = this.constructor.name;\r\n        this.fullName = bridgeContext.getB612NativeContext().namespace + '.' + this.className;\r\n        this.callback = {};\r\n        this.callback.fullName = this.fullName + '.callback';\r\n        this._registerGlobal();\r\n    }\r\n\r\n    /**\r\n     * AndroidBridge를 native에서 callback 함수를 호출할 수 있도록 window 객체로 등록한다.\r\n     * @param instance\r\n     * @private\r\n     */\r\n    _registerGlobal() {\r\n        bridgeContext.getB612NativeContext()[this.className] = bridgeContext.getB612NativeContext()[this.className] || this;\r\n    }\r\n\r\n    /**\r\n     * 전달된 이름의 callback을 등록하고 callback 함수의 full 명칭을 리턴한다.\r\n     * @param callbackName : callback 함수 이름\r\n     * @param userCallback : client code에서 지정한 callback 함수\r\n     * @param resultType : bridge 호출 결과를 변환할 오브젝트 type을 지정하면 해당 type의 .from() 메소드를 호출해 변환한다.\r\n     * @param additionalParams : userCallback 함수에 추가적으로 전달할 파라미터\r\n     * @returns {string} : callback 함수의 full 명칭\r\n     * @private\r\n     */\r\n    _registerCallback(callbackName, userCallback, resultType, ...additionalParams) {\r\n        this.callback[callbackName] = (result) => {\r\n            this._logResult(result, callbackName);\r\n            let resultParsed = resultType ? resultType.from(result) : result;\r\n            userCallback.apply(undefined, [resultParsed, ...additionalParams]);\r\n        };\r\n        return this._makeNativeCallbackName(callbackName);\r\n    }\r\n\r\n    /**\r\n     * app에서 호출할 callback 메소드명을 namespace를 포함한 full 접근명으로 변환하여 리턴한다.\r\n     * @param methodName\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _makeNativeCallbackName(methodName) {\r\n        return this.callback.fullName + '.' + methodName;\r\n    }\r\n\r\n    /**\r\n     * app에서 callback으로 전달받은 result json을 parsing하여 logging 한다.\r\n     * @param result\r\n     * @param callbackName : 로깅할 callbackName 명칭\r\n     * @private\r\n     */\r\n    _logResult(result, callbackName) {\r\n        let _result = result;\r\n        if (typeof result === 'string') {\r\n            _result = result.substring(0, 1000);\r\n        }\r\n        //alert(`[Native callback][${callbackName}] : ${_result}`);\r\n        console.log(`[Native callback][${callbackName}] : ${_result}`);\r\n    }\r\n\r\n    printThis() {\r\n        console.log('--- print this below --- ');\r\n        console.log(this);\r\n        console.log('--- end of print this --- ');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/AbstractBridge.js","import AbstractBridge from \"./AbstractBridge\";\r\n\r\nlet instance = null;\r\n\r\nexport default class NullBridge extends AbstractBridge {\r\n    constructor() {\r\n        super();\r\n        if (!instance) {\r\n            instance = this;\r\n            super._initInstance(instance);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    appInfo(userCallback) {\r\n        console.log('[NullBridge] appInfo');\r\n    }\r\n\r\n    save(saveShareParam, userCallback) {\r\n        console.log('[NullBridge] save, param : ' + saveShareParam.toString());\r\n    }\r\n\r\n    shareWithCallback(saveShareParam, sharePoppedCallback, shareMediaClickedCallback) {\r\n        console.log('[NullBridge] shareWithCallback, param : ' + saveShareParam.toString());\r\n    }\r\n\r\n    eventCamera(eventCameraParam, userCallback) {\r\n        console.log('[NullBridge] eventCamera, param : ' + eventCameraParam.toString());\r\n    }\r\n\r\n\teventCameraWithLandmarks(eventCameraParam, userCallback) {\r\n\t\tconsole.log('[NullBridge] eventCamera, param : ' + eventCameraParam.toString());\r\n    }\r\n\r\n    getCameraImage(userCallback) {\r\n        console.log('[NullBridge] getCameraImage');\r\n    }\r\n\r\n\tgetCameraImageWithLandmarks(userCallback) {\r\n        console.log('[NullBridge] getCameraImage');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/NullBridge.js","export default class AppInfo {\r\n    constructor(app, os, deviceModel, language, country) {\r\n        this.app = app;\r\n        this.os = os;\r\n        this.deviceModel = deviceModel;\r\n        this.language = language;\r\n        this.country = country;\r\n    }\r\n\r\n    static from(result) {\r\n        const {app, os, deviceModel, language, country} = JSON.parse(result);\r\n        return new AppInfo(app, os, deviceModel, language, country);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/model/AppInfo.js","export default class AppCommonResult {\r\n    constructor(success) {\r\n        this.success = success;\r\n    }\r\n\r\n    static from(result) {\r\n        const {success} = JSON.parse(result);\r\n        return new AppCommonResult(success);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/model/AppCommonResult.js","export default class EventCameraResult {\r\n    constructor(base64Image, success) {\r\n        this.base64Image = base64Image;\r\n        this.success = success;\r\n    }\r\n\r\n    static from(base64Image) {\r\n        if (base64Image) {\r\n            return new EventCameraResult(base64Image, true);\r\n        } else {\r\n            return new EventCameraResult(base64Image, false);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/model/EventCameraResult.js","export default class GetCameraResult {\r\n    constructor(base64Image, success) {\r\n        this.base64Image = base64Image;\r\n        this.success = success;\r\n    }\r\n\r\n    static from(base64Image) {\r\n        if (base64Image) {\r\n            return new GetCameraResult(base64Image.replace(/\\n/gi, \"\"), true);\r\n        } else {\r\n            return new GetCameraResult(base64Image, false);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/model/GetCameraResult.js","export default class CameraResult {\r\n    constructor({success, base64Image, url, landmarks}) {\r\n        this.success = success;\r\n        this.base64Image = base64Image;\r\n        this.url = url; // only from IOS eventCamera result\r\n        this.landmarks = JSON.stringify(landmarks);\r\n    }\r\n\r\n    static from(result) {\r\n        return new CameraResult(JSON.parse(result));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/model/CameraResult.js","import AbstractBridge from \"./AbstractBridge\";\r\nimport AppInfo from \"./model/AppInfo\";\r\nimport AppCommonResult from \"./model/AppCommonResult\";\r\nimport EventCameraResult from \"./model/EventCameraResult\";\r\nimport GetCameraResult from \"./model/GetCameraResult\";\r\nimport CameraResult from \"./model/CameraResult\";\r\nimport BrowserChecker from \"../util/BrowserChecker\";\r\n\r\nlet instance = null;\r\nlet native = window.B612KajiBridgeInterface;\r\n\r\nexport default class AndroidBridge extends AbstractBridge {\r\n    constructor() {\r\n        super();\r\n        if (!instance) {\r\n            instance = this;\r\n            super._initInstance(instance);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    /**\r\n     * app 정보 요청 (정확히 어떤 정보 ?)\r\n     * @param userCallback\r\n     *    : callback param 0 - ./model/AppInfo\r\n     */\r\n    appInfo(userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"appInfo\", userCallback, AppInfo);\r\n        native.appInfo(callbackMethodFullName);\r\n    }\r\n\r\n    /**\r\n     * 앱에게 이미지 또는 비디오를 전달하여 단말에 저장을 요청한다.\r\n     * @param saveShareParam (@see ./param/SaveShareParam)\r\n     * @param userCallback\r\n     */\r\n    save(saveShareParam, userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"save\", userCallback, AppCommonResult);\r\n        native.save(callbackMethodFullName, saveShareParam.toString());\r\n    }\r\n\r\n    /**\r\n     * 앱에게 이미지 또는 비디오를 전달하여 공유를 요청한다.\r\n     * @param saveShareParam (@see ./param/SaveShareParam)\r\n     * @param sharePoppedCallback - app에서 공유 div를 보여준 후 호출되는 callback\r\n     * @param shareMediaClickedCallback - app에서 share 매체를 선택한 후 callback (호출되지 않는데 ??)\r\n     */\r\n    shareWithCallback(saveShareParam, sharePoppedCallback, shareMediaClickedCallback) {\r\n        const sharePoppedCallbackName = this._registerCallback('sharePoppedCallback', sharePoppedCallback, AppCommonResult);\r\n        const shareMediaClickedCallbackName = this._registerCallback('shareMediaClickedCallback', shareMediaClickedCallback, AppCommonResult);\r\n\r\n        native.shareWithCallback(sharePoppedCallbackName,\r\n            shareMediaClickedCallbackName,\r\n            saveShareParam.toString());\r\n    }\r\n\r\n    /**\r\n     * 앱으로 camera 나 gallery 호출을 요청한다.\r\n     * @param eventCameraParam (@see ./param/EventCameraParam)\r\n     * @param userCallback\r\n     */\r\n    eventCamera(eventCameraParam, userCallback) {\r\n        //기획 변경 : 안드로이드의 경우에는 속도이슈로 Filter만 적용(Sticker 제외)\r\n        if(BrowserChecker.isAndroid()) {\r\n            // eventCameraParam.filterId = undefined;\r\n            eventCameraParam.categoryId = undefined;\r\n            eventCameraParam.stickerId = undefined;\r\n        }\r\n\r\n        const callbackMethodFullName = this._registerCallback(\r\n            \"eventCamera\", userCallback, EventCameraResult, eventCameraParam.type, eventCameraParam.cameraPosition);\r\n\r\n        native.eventCamera(callbackMethodFullName, eventCameraParam.toString(true));\r\n    }\r\n\r\n    eventCameraWithLandmarks(eventCameraParam, userCallback) {\r\n        //기획 변경 : 안드로이드의 경우에는 속도이슈로 Filter만 적용(Sticker 제외)\r\n        if(BrowserChecker.isAndroid()) {\r\n            // eventCameraParam.filterId = undefined;\r\n            eventCameraParam.categoryId = undefined;\r\n            eventCameraParam.stickerId = undefined;\r\n        }\r\n\r\n        const callbackMethodFullName = this._registerCallback(\r\n            \"eventCameraWithLandmarks\", userCallback, CameraResult, eventCameraParam.type, eventCameraParam.cameraPosition);\r\n\r\n        native.eventCameraWithLandmarks(callbackMethodFullName, eventCameraParam.toString(true));\r\n    }\r\n\r\n    /**\r\n     * 마지막으로 촬영한 사진을 가져온다.\r\n     * @param userCallback\r\n     */\r\n    getCameraImage(userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"getCameraImage\", userCallback, GetCameraResult);\r\n        native.getCameraImage(callbackMethodFullName);\r\n    }\r\n\r\n    getCameraImageWithLandmarks(userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"getCameraImageWithLandmarks\", userCallback, CameraResult);\r\n        native.getCameraImageWithLandmarks(callbackMethodFullName);\r\n    }\r\n\r\n    close() {\r\n        // const callbackMethodFullName = this._registerCallback(\"close\", '', AppCommonResult);\r\n        // const callbackMethodFullName = this._registerCallback(\"close\", '', '');\r\n        // native.close(callbackMethodFullName, saveShareParam.toString());\r\n        native.close()\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/AndroidBridge.js","import AbstractBridge from \"./AbstractBridge\";\r\nimport ConfigFactory from \"@/config/index\"\r\nimport AppInfo from \"./model/AppInfo\";\r\nimport AppCommonResult from \"./model/AppCommonResult\";\r\nimport CameraResult from \"./model/CameraResult\";\r\n\r\nlet instance = null;\r\n\r\nexport default class IosBridge extends AbstractBridge {\r\n    constructor() {\r\n        super();\r\n        if (!instance) {\r\n            instance = this;\r\n            super._initInstance(instance);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    /**\r\n     * app 정보 요청 (정확히 어떤 정보 ?)\r\n     * @param userCallback\r\n     *    : callback param 0 - ./model/AppInfo\r\n     */\r\n    appInfo(userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"appInfo\", userCallback, AppInfo);\r\n        this._calliOSFunction(\"appInfo\", null, callbackMethodFullName);\r\n    }\r\n\r\n    /**\r\n     * 앱에게 이미지 또는 비디오를 전달하여 단말에 저장을 요청한다.\r\n     * @param saveShareParam (@see ./param/SaveShareParam)\r\n     * @param userCallback\r\n     */\r\n    save(saveShareParam, userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"save\", userCallback, AppCommonResult);\r\n        this._calliOSFunction(\"save\", saveShareParam, callbackMethodFullName);\r\n    }\r\n\r\n    /**\r\n     * 앱에게 이미지 또는 비디오를 전달하여 공유를 요청한다.\r\n     * @param saveShareParam (@see ./param/SaveShareParam)\r\n     * @param sharePoppedCallback - app에서 공유 div를 보여준 후 호출되는 callback\r\n     * @param shareMediaClickedCallback - app에서 share 매체를 선택한 후 callback (호출되지 않는데 ??)\r\n     */\r\n    shareWithCallback(saveShareParam, sharePoppedCallback, shareMediaClickedCallback) {\r\n        const sharePoppedCallbackName = this._registerCallback('sharePoppedCallback', sharePoppedCallback, AppCommonResult);\r\n        const shareMediaClickedCallbackName = this._registerCallback('shareMediaClickedCallback', shareMediaClickedCallback, AppCommonResult);\r\n\r\n        const options = JSON.parse(saveShareParam.toString());\r\n        options.clickShareButton = shareMediaClickedCallbackName;\r\n\r\n        this._calliOSFunction(\"share\", options, sharePoppedCallbackName);\r\n    }\r\n\r\n    /**\r\n     * 앱으로 camera 나 gallery 호출을 요청한다.\r\n     * @param eventCameraParam (@see ./param/EventCameraParam)\r\n     * @param userCallback\r\n     */\r\n    eventCamera(eventCameraParam, userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"eventCamera\", userCallback,\r\n            CameraResult, eventCameraParam.type, eventCameraParam.cameraPosition);\r\n\r\n        this._calliOSFunction(\"eventCamera\", eventCameraParam, callbackMethodFullName);\r\n    }\r\n\r\n    eventCameraWithLandmarks(eventCameraParam, userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"eventCameraWithLandmarks\", userCallback,\r\n            CameraResult, eventCameraParam.type, eventCameraParam.cameraPosition);\r\n\r\n        this._calliOSFunction(\"eventCameraWithLandmarks\", eventCameraParam, callbackMethodFullName);\r\n    }\r\n\r\n    /**\r\n     * 마지막으로 촬영한 사진을 가져온다.\r\n     * @param userCallback\r\n     */\r\n    getCameraImage(userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"getCameraImage\", userCallback, CameraResult);\r\n        this._calliOSFunction(\"getCameraImage\", null, callbackMethodFullName);\r\n    }\r\n\r\n    getCameraImageWithLandmarks(userCallback) {\r\n        const callbackMethodFullName = this._registerCallback(\"getCameraImageWithLandmarks\", userCallback, CameraResult);\r\n        this._calliOSFunction(\"getCameraImageWithLandmarks\", null, callbackMethodFullName);\r\n    }\r\n\r\n    close() {\r\n        // const callbackMethodFullName = this._registerCallback(\"getCameraImageWithLandmarks\", userCallback, CameraResult);\r\n        this._calliOSFunction(\"close\", null, null);\r\n    }\r\n\r\n    /**\r\n     * ios app과 연동하기 위한 method\r\n     * (app scheme을 통해 연동)\r\n     *\r\n     * @param functionName - app과 정의된 function name\r\n     * @param args - 전달할 argument object\r\n     * @param sCallback - app에서 호출해줄 callback 명\r\n     * @private\r\n     */\r\n    _calliOSFunction(functionName, args, sCallback) {\r\n        let url = ConfigFactory.b612Scheme + \"native/\";\r\n        const callInfo = {};\r\n        callInfo.functionName = functionName;\r\n        if (sCallback) {\r\n            callInfo.success = sCallback;\r\n        }\r\n        if (args) {\r\n            callInfo.args = args;\r\n        }\r\n        url += JSON.stringify(callInfo);\r\n\r\n        this._openCustomURLinIFrame(url);\r\n    }\r\n\r\n    _openCustomURLinIFrame(src) {\r\n        const rootElm = document.documentElement;\r\n        const newFrameElm = document.createElement(\"IFRAME\");\r\n\r\n        newFrameElm.setAttribute(\"src\", src);\r\n        rootElm.appendChild(newFrameElm);\r\n        newFrameElm.parentNode.removeChild(newFrameElm);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/IosBridge.js","import BrowserChecker from \"../util/BrowserChecker\";\r\nimport NullBridge from \"./NullBridge\";\r\nimport AndroidBridge from \"./AndroidBridge\";\r\nimport IosBridge from \"./IosBridge\";\r\n\r\n\r\nexport default class BridgeFactory {\r\n    static getBridge() {\r\n        if (BrowserChecker.isIos()) {\r\n            return new IosBridge();\r\n\r\n        } else if (window.B612KajiBridgeInterface != undefined && BrowserChecker.isAndroid()) {\r\n            return new AndroidBridge();\r\n\r\n        } else {\r\n            return new NullBridge();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/BridgeFactory.js","import BridgeParam from \"./BridgeParam\";\r\n\r\nconst types = {\r\n    imageCamera: 'imageCamera',\r\n    imageAlbum: 'imageAlbum'\r\n};\r\n\r\nconst cameraPositions = {\r\n    front: '0',\r\n    back: '1'\r\n};\r\n\r\nexport default class EventCameraParam extends BridgeParam {\r\n    constructor(type='', cameraPosition='', filterId='', categoryId='', stickerId='', collageId = '') {\r\n        super();\r\n        if (!types[type]) throw `[illegal type] ${type}`;\r\n        this.type = type;\r\n        this.cameraPosition = cameraPosition;\r\n        this.filterId = filterId;\r\n        this.categoryId = categoryId;\r\n        this.stickerId = stickerId;\r\n        this.collageId = collageId;\r\n        this.autoDownload = 'true';\r\n    }\r\n\r\n    static get types() {\r\n        return types;\r\n    }\r\n\r\n    static get cameraPositions() {\r\n        return cameraPositions;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/param/EventCameraParam.js","export default class BridgeParam {\r\n\r\n    /**\r\n     * 파라미터 오브젝트를 json string 으로 변환한다.\r\n     *\r\n     * @param clearEmpty - true인 경우 값이 없다면(빈 스트링 포함) 해당 key를 제외한다. (default: false)\r\n     * @returns {string}\r\n     */\r\n    toString(clearEmpty) {\r\n        if(clearEmpty) {\r\n            return JSON.stringify(this, (key, value) => {\r\n                if(!value) {\r\n                    return undefined;\r\n                } else {\r\n                    return value;\r\n                }\r\n            });\r\n        } else {\r\n            return JSON.stringify(this);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/bridge/param/BridgeParam.js","// import 'babel-polyfill'\n\nimport BridgeFactory from '@/js/bridge/BridgeFactory'\nimport BrowserChecker from \"@/js/util/BrowserChecker\"\nimport config from '@/config/index'\nimport 'zepto/src/zepto'\nimport 'zepto/src/event'\nimport baseConfig from '@/config/index'\n\nimport EventCameraParam from \"@/js/bridge/param/EventCameraParam\";\n// import 'zepto/src/ajax'\n\nvar vConsole = new VConsole();\nconsole.log(config);\n\nvar appState = {\n  isAnd: false,\n  isIos: false,\n  isInApp: false\n}\n\nif (BrowserChecker.isIos()) {\n  appState.isIos = true\n} else if (BrowserChecker.isAndroid()) {\n  appState.isAnd = true\n}\n\ndocument.querySelector('.baseState').innerText = JSON.stringify(appState)\n\n// console.log(window.B612KajiBridgeInterface != undefined)\nBridgeFactory.getBridge().appInfo(res => {\n  // app内 才能执行到这一步\n  /*\n    {app: '7.n.n', 'os': '23', deviceModel: 'CAM-TLOO', 'language': 'zh-CN', 'country':'CN'}\n  */\n  document.querySelector('.AppInfo').innerText = JSON.stringify(res)\n  if (res.app) {\n    appState.isInApp = true\n    document.querySelector('.baseState').innerText = JSON.stringify(appState)\n\n    // 显示eventCameraWithLandmarksBtn\n    $('#eventCameraWithLandmarksBtn').css('display','inline-block')\n\n    // 显示getUUid\n    $('#getUUid').show()\n\n    $('.exit').show()\n    $('.exit button').click(() => {\n      BridgeFactory.getBridge().close()\n    })\n\n    let obj = getParamsToObj()\n    $('.getUUidVal')[0].innerText = !!obj.uuid ? obj.uuid : ''\n  }\n})\n\nfunction getParamsToObj(url) {\n  let _url = url || window.location.search;\n  let params = _url.substring(1).split('?')\n  let obj = {}\n  params.forEach((item, index) => {\n    let ite = item.split('=')\n    obj[ite[0]] = ite[1]\n  })\n  return obj;\n}\ngetParamsToObj()\n// 从相册选取\n$('#galleryBtn').on('click', () => {\n  if (appState.isInApp) {\n\n    const param = new EventCameraParam(\n            EventCameraParam.types.imageAlbum, // 字符串 imageCamera: 相机  imageAlbum： 相册\n    );\n    BridgeFactory.getBridge().eventCamera(param, eventCameraCallback);\n  } else {\n    $('#inputfile').trigger('click')\n  }\n})\n\n// 用相机拍照\n$('#cameraBtn').on('click', () => {\n  if (appState.isInApp) {\n    const param = new EventCameraParam(\n            EventCameraParam.types.imageCamera, // 字符串 imageCamera: 相机  imageAlbum： 相册\n            EventCameraParam.cameraPositions.front, // 前置摄像头 0  后置摄像头: 1\n            baseConfig.filterId, // 滤镜id\n            baseConfig.categoryId, // 分栏id (贴纸是在分栏里面的 所以app一般找贴纸先找到贴纸所在的分栏)\n            baseConfig.stickerId, // 贴纸id\n            '', // 貌似是 音乐id\n            'true'  // 已设置默认为true\n    );\n    BridgeFactory.getBridge().eventCamera(param, eventCameraCallback);\n  } else {\n    $('#inputfile').trigger('click')\n  }\n})\n\n// 用相机拍照\n$('#eventCameraWithLandmarksBtn').on('click', () => {\n  console.log('eventCameraWithLandmarks  仅兼容7.6.0以上版本');\n  if (appState.isInApp) {\n    const param = new EventCameraParam(\n            EventCameraParam.types.imageCamera, // 字符串 imageCamera: 相机  imageAlbum： 相册\n            EventCameraParam.cameraPositions.front, // 前置摄像头 0  后置摄像头: 1\n            baseConfig.filterId, // 滤镜id\n            baseConfig.categoryId, // 分栏id (贴纸是在分栏里面的 所以app一般找贴纸先找到贴纸所在的分栏)\n            baseConfig.stickerId, // 贴纸id\n            '', // 貌似是 音乐id\n            // 'true'  // 已设置默认为true\n    );\n    BridgeFactory.getBridge().eventCameraWithLandmarks(param, eventCameraCallback);\n  } else {\n    $('#inputfile').trigger('click')\n  }\n})\n\nfunction eventCameraCallback(result, type) {\n\n\t console.log('>>> eventCameraCallback - result', result);\n    if(!result) return;\n\n    if (!result.base64Image) {\n        //  没有获取到照片资源\n        return;\n    }\n\n    if (!result.success) {\n        // 获取失败\n        return;\n    }\n\n    const base64Image = result.base64Image;\n    const landmarks = result.landmarks;\n    $('.landmarks').text(landmarks)\n    $('#distImg').attr('src', base64Image)\n    // ImageHandleSupport.preProcessAndUploadImage(base64Image, landmarks, type);\n}\n\n$('#inputfile').on('change', function(){\n  // 此处过于简单 实际请转base64 并压缩为合适尺寸大小\n  $('#distImg').attr('src', URL.createObjectURL($(this)[0].files[0]))\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = {\n  assetsPublicPath: './',\n  assetsRoot: '../dist/local/',\n  b612Scheme: 'b612cnb://',\n  sitePrefix: 'http://h5-beta.kajicam.com/events',// 拼接打开app并在其中启动link的前缀 短点好 服务器地址 每次不用再改\n  uploadUrl: \"http://qa-b612-fs.snowcam.cn/v1/event/vision/travel/upload-only\",\n  imgProcess:'http://qa-b612-fs.snowcam.cn/v1/event/vision/travel',\n  imagePrefix: \"https://qa-b612.snowcam.cn/owfs/\",\n  filterId: \"235\",\n  categoryId: \"20136\",\n  stickerId: \"301197\",\n  activityName: 'sept', //活动目录\n  downLink: 'https://lnk0.com/easylink/EL50AJ9g'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/local.js"],"sourceRoot":""}